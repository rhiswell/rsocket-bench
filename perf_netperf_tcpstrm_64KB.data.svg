<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>rs_poll_cq (3 samples, 0.30%)</title><rect x="1173.3" y="453" width="3.6" height="15.0" fill="rgb(214,26,28)" rx="2" ry="2" />
<text  x="1176.31" y="463.5" ></text>
</g>
<g >
<title>sys_sched_setaffinity (1 samples, 0.10%)</title><rect x="1187.6" y="421" width="1.2" height="15.0" fill="rgb(210,23,1)" rx="2" ry="2" />
<text  x="1190.62" y="431.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (83 samples, 8.38%)</title><rect x="614.3" y="309" width="98.9" height="15.0" fill="rgb(228,91,38)" rx="2" ry="2" />
<text  x="617.30" y="319.5" >__vdso_gett..</text>
</g>
<g >
<title>rs_process_cq (6 samples, 0.61%)</title><rect x="1166.2" y="437" width="7.1" height="15.0" fill="rgb(234,125,5)" rx="2" ry="2" />
<text  x="1169.16" y="447.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.10%)</title><rect x="16.0" y="117" width="1.2" height="15.0" fill="rgb(205,30,28)" rx="2" ry="2" />
<text  x="18.96" y="127.5" ></text>
</g>
<g >
<title>sched_setaffinity (1 samples, 0.10%)</title><rect x="1187.6" y="405" width="1.2" height="15.0" fill="rgb(227,129,30)" rx="2" ry="2" />
<text  x="1190.62" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.10%)</title><rect x="1184.0" y="357" width="1.2" height="15.0" fill="rgb(205,24,39)" rx="2" ry="2" />
<text  x="1187.04" y="367.5" ></text>
</g>
<g >
<title>gettimeofday@plt (3 samples, 0.30%)</title><rect x="12.4" y="437" width="3.6" height="15.0" fill="rgb(221,159,7)" rx="2" ry="2" />
<text  x="15.38" y="447.5" ></text>
</g>
<g >
<title>rs_process_cq (283 samples, 28.59%)</title><rect x="713.2" y="309" width="337.3" height="15.0" fill="rgb(219,219,28)" rx="2" ry="2" />
<text  x="716.23" y="319.5" >rs_process_cq</text>
</g>
<g >
<title>mlx4_post_recv (3 samples, 0.30%)</title><rect x="990.9" y="245" width="3.6" height="15.0" fill="rgb(220,85,11)" rx="2" ry="2" />
<text  x="993.95" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.10%)</title><rect x="1188.8" y="309" width="1.2" height="15.0" fill="rgb(245,23,10)" rx="2" ry="2" />
<text  x="1191.81" y="319.5" ></text>
</g>
<g >
<title>rs_update_credits (47 samples, 4.75%)</title><rect x="994.5" y="293" width="56.0" height="15.0" fill="rgb(232,169,45)" rx="2" ry="2" />
<text  x="997.53" y="303.5" >rs_up..</text>
</g>
<g >
<title>mlx4_poll_ibv_cq (2 samples, 0.20%)</title><rect x="987.4" y="261" width="2.4" height="15.0" fill="rgb(251,177,4)" rx="2" ry="2" />
<text  x="990.37" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (1 samples, 0.10%)</title><rect x="1184.0" y="437" width="1.2" height="15.0" fill="rgb(218,126,3)" rx="2" ry="2" />
<text  x="1187.04" y="447.5" ></text>
</g>
<g >
<title>netperf (989 samples, 99.90%)</title><rect x="10.0" y="469" width="1178.8" height="15.0" fill="rgb(244,10,23)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >netperf</text>
</g>
<g >
<title>rs_sbuf_left (1 samples, 0.10%)</title><rect x="1051.7" y="325" width="1.2" height="15.0" fill="rgb(212,133,47)" rx="2" ry="2" />
<text  x="1054.74" y="335.5" ></text>
</g>
<g >
<title>sys_execve (1 samples, 0.10%)</title><rect x="1188.8" y="437" width="1.2" height="15.0" fill="rgb(231,10,12)" rx="2" ry="2" />
<text  x="1191.81" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main (902 samples, 91.11%)</title><rect x="16.0" y="437" width="1075.1" height="15.0" fill="rgb(207,196,23)" rx="2" ry="2" />
<text  x="18.96" y="447.5" >__libc_start_main</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.10%)</title><rect x="1184.0" y="341" width="1.2" height="15.0" fill="rgb(231,67,14)" rx="2" ry="2" />
<text  x="1187.04" y="351.5" ></text>
</g>
<g >
<title>rsocket (1 samples, 0.10%)</title><rect x="16.0" y="357" width="1.2" height="15.0" fill="rgb(220,175,50)" rx="2" ry="2" />
<text  x="18.96" y="367.5" ></text>
</g>
<g >
<title>rs_get_comp (414 samples, 41.82%)</title><rect x="557.1" y="325" width="493.4" height="15.0" fill="rgb(235,121,3)" rx="2" ry="2" />
<text  x="560.09" y="335.5" >rs_get_comp</text>
</g>
<g >
<title>urandom_read (2 samples, 0.20%)</title><rect x="1185.2" y="277" width="2.4" height="15.0" fill="rgb(219,200,18)" rx="2" ry="2" />
<text  x="1188.23" y="287.5" ></text>
</g>
<g >
<title>send_omni_inner (901 samples, 91.01%)</title><rect x="17.2" y="389" width="1073.9" height="15.0" fill="rgb(218,197,36)" rx="2" ry="2" />
<text  x="20.15" y="399.5" >send_omni_inner</text>
</g>
<g >
<title>rs_can_send (10 samples, 1.01%)</title><rect x="846.7" y="277" width="11.9" height="15.0" fill="rgb(242,186,53)" rx="2" ry="2" />
<text  x="849.73" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_fastpath (2 samples, 0.20%)</title><rect x="1185.2" y="341" width="2.4" height="15.0" fill="rgb(250,7,20)" rx="2" ry="2" />
<text  x="1188.23" y="351.5" ></text>
</g>
<g >
<title>_dlerror_run (1 samples, 0.10%)</title><rect x="16.0" y="197" width="1.2" height="15.0" fill="rgb(221,26,3)" rx="2" ry="2" />
<text  x="18.96" y="207.5" ></text>
</g>
<g >
<title>perf (1 samples, 0.10%)</title><rect x="1188.8" y="469" width="1.2" height="15.0" fill="rgb(252,185,19)" rx="2" ry="2" />
<text  x="1191.81" y="479.5" ></text>
</g>
<g >
<title>sha_transform (1 samples, 0.10%)</title><rect x="1186.4" y="229" width="1.2" height="15.0" fill="rgb(231,62,3)" rx="2" ry="2" />
<text  x="1189.42" y="239.5" ></text>
</g>
<g >
<title>fastlock_release (9 samples, 0.91%)</title><rect x="541.6" y="325" width="10.7" height="15.0" fill="rgb(207,1,11)" rx="2" ry="2" />
<text  x="544.60" y="335.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.9 (1 samples, 0.10%)</title><rect x="1188.8" y="277" width="1.2" height="15.0" fill="rgb(210,225,26)" rx="2" ry="2" />
<text  x="1191.81" y="287.5" ></text>
</g>
<g >
<title>all (990 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(207,52,23)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.51%)</title><rect x="10.0" y="453" width="6.0" height="15.0" fill="rgb(210,111,21)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>mlx4_bf_copy (4 samples, 0.40%)</title><rect x="1081.5" y="261" width="4.8" height="15.0" fill="rgb(214,100,33)" rx="2" ry="2" />
<text  x="1084.54" y="271.5" ></text>
</g>
<g >
<title>uuid_create (2 samples, 0.20%)</title><rect x="1185.2" y="421" width="2.4" height="15.0" fill="rgb(215,71,26)" rx="2" ry="2" />
<text  x="1188.23" y="431.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.10%)</title><rect x="16.0" y="101" width="1.2" height="15.0" fill="rgb(212,105,18)" rx="2" ry="2" />
<text  x="18.96" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_read (2 samples, 0.20%)</title><rect x="1185.2" y="357" width="2.4" height="15.0" fill="rgb(238,67,45)" rx="2" ry="2" />
<text  x="1188.23" y="367.5" ></text>
</g>
<g >
<title>ERR (2 samples, 0.20%)</title><rect x="1176.9" y="437" width="2.4" height="15.0" fill="rgb(211,61,53)" rx="2" ry="2" />
<text  x="1179.89" y="447.5" ></text>
</g>
<g >
<title>_IO_fread (2 samples, 0.20%)</title><rect x="1185.2" y="405" width="2.4" height="15.0" fill="rgb(215,147,50)" rx="2" ry="2" />
<text  x="1188.23" y="415.5" ></text>
</g>
<g >
<title>rs_poll_cq (114 samples, 11.52%)</title><rect x="858.6" y="293" width="135.9" height="15.0" fill="rgb(214,100,27)" rx="2" ry="2" />
<text  x="861.65" y="303.5" >rs_poll_cq</text>
</g>
<g >
<title>perf_pmu_enable (1 samples, 0.10%)</title><rect x="1188.8" y="325" width="1.2" height="15.0" fill="rgb(235,23,36)" rx="2" ry="2" />
<text  x="1191.81" y="335.5" ></text>
</g>
<g >
<title>load_driver (1 samples, 0.10%)</title><rect x="16.0" y="229" width="1.2" height="15.0" fill="rgb(241,98,40)" rx="2" ry="2" />
<text  x="18.96" y="239.5" ></text>
</g>
<g >
<title>count_devices (1 samples, 0.10%)</title><rect x="16.0" y="277" width="1.2" height="15.0" fill="rgb(210,17,8)" rx="2" ry="2" />
<text  x="18.96" y="287.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.10%)</title><rect x="1187.6" y="293" width="1.2" height="15.0" fill="rgb(205,50,20)" rx="2" ry="2" />
<text  x="1190.62" y="303.5" ></text>
</g>
<g >
<title>rsend (1 samples, 0.10%)</title><rect x="1184.0" y="453" width="1.2" height="15.0" fill="rgb(224,43,40)" rx="2" ry="2" />
<text  x="1187.04" y="463.5" ></text>
</g>
<g >
<title>__errno_location (1 samples, 0.10%)</title><rect x="739.5" y="277" width="1.1" height="15.0" fill="rgb(240,103,38)" rx="2" ry="2" />
<text  x="742.45" y="287.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.10%)</title><rect x="1187.6" y="213" width="1.2" height="15.0" fill="rgb(226,50,23)" rx="2" ry="2" />
<text  x="1190.62" y="223.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.9 (1 samples, 0.10%)</title><rect x="1187.6" y="197" width="1.2" height="15.0" fill="rgb(250,100,8)" rx="2" ry="2" />
<text  x="1190.62" y="207.5" ></text>
</g>
<g >
<title>return_from_execve (1 samples, 0.10%)</title><rect x="1188.8" y="453" width="1.2" height="15.0" fill="rgb(230,131,51)" rx="2" ry="2" />
<text  x="1191.81" y="463.5" ></text>
</g>
<g >
<title>ERR (6 samples, 0.61%)</title><rect x="733.5" y="293" width="7.1" height="15.0" fill="rgb(216,180,37)" rx="2" ry="2" />
<text  x="736.49" y="303.5" ></text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.10%)</title><rect x="1188.8" y="261" width="1.2" height="15.0" fill="rgb(231,89,8)" rx="2" ry="2" />
<text  x="1191.81" y="271.5" ></text>
</g>
<g >
<title>rs_give_credits (34 samples, 3.43%)</title><rect x="1010.0" y="277" width="40.5" height="15.0" fill="rgb(232,142,26)" rx="2" ry="2" />
<text  x="1013.02" y="287.5" >rs_..</text>
</g>
<g >
<title>idm_lookup (1 samples, 0.10%)</title><rect x="23.1" y="325" width="1.2" height="15.0" fill="rgb(220,37,4)" rx="2" ry="2" />
<text  x="26.11" y="335.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (1 samples, 0.10%)</title><rect x="1187.6" y="453" width="1.2" height="15.0" fill="rgb(211,38,12)" rx="2" ry="2" />
<text  x="1190.62" y="463.5" ></text>
</g>
<g >
<title>get_sw_cqe (30 samples, 3.03%)</title><rect x="945.7" y="245" width="35.7" height="15.0" fill="rgb(246,1,5)" rx="2" ry="2" />
<text  x="948.66" y="255.5" >get..</text>
</g>
<g >
<title>post_send_rc_uc (4 samples, 0.40%)</title><rect x="1086.3" y="261" width="4.8" height="15.0" fill="rgb(224,0,44)" rx="2" ry="2" />
<text  x="1089.30" y="271.5" ></text>
</g>
<g >
<title>sys_read (2 samples, 0.20%)</title><rect x="1185.2" y="325" width="2.4" height="15.0" fill="rgb(252,127,54)" rx="2" ry="2" />
<text  x="1188.23" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (430 samples, 43.43%)</title><rect x="29.1" y="325" width="512.5" height="15.0" fill="rgb(213,147,12)" rx="2" ry="2" />
<text  x="32.07" y="335.5" >__memcpy_sse2_unaligned</text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.10%)</title><rect x="1188.8" y="293" width="1.2" height="15.0" fill="rgb(244,54,24)" rx="2" ry="2" />
<text  x="1191.81" y="303.5" ></text>
</g>
<g >
<title>ibv_poll_cq (3 samples, 0.30%)</title><rect x="1173.3" y="437" width="3.6" height="15.0" fill="rgb(209,148,46)" rx="2" ry="2" />
<text  x="1176.31" y="447.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.20%)</title><rect x="1185.2" y="309" width="2.4" height="15.0" fill="rgb(222,188,29)" rx="2" ry="2" />
<text  x="1188.23" y="319.5" ></text>
</g>
<g >
<title>socket (1 samples, 0.10%)</title><rect x="16.0" y="373" width="1.2" height="15.0" fill="rgb(216,57,17)" rx="2" ry="2" />
<text  x="18.96" y="383.5" ></text>
</g>
<g >
<title>_IO_file_underflow@@GLIBC_2.2.5 (2 samples, 0.20%)</title><rect x="1185.2" y="373" width="2.4" height="15.0" fill="rgb(228,63,30)" rx="2" ry="2" />
<text  x="1188.23" y="383.5" ></text>
</g>
<g >
<title>rs_write_data (32 samples, 3.23%)</title><rect x="1052.9" y="325" width="38.2" height="15.0" fill="rgb(218,178,2)" rx="2" ry="2" />
<text  x="1055.93" y="335.5" >rs_..</text>
</g>
<g >
<title>rs_process_cq (5 samples, 0.51%)</title><rect x="1176.9" y="453" width="5.9" height="15.0" fill="rgb(208,50,14)" rx="2" ry="2" />
<text  x="1179.89" y="463.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="1184.0" y="389" width="1.2" height="15.0" fill="rgb(229,125,33)" rx="2" ry="2" />
<text  x="1187.04" y="399.5" ></text>
</g>
<g >
<title>rs_get_comp (6 samples, 0.61%)</title><rect x="1166.2" y="453" width="7.1" height="15.0" fill="rgb(210,191,50)" rx="2" ry="2" />
<text  x="1169.16" y="463.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.10%)</title><rect x="1187.6" y="309" width="1.2" height="15.0" fill="rgb(214,158,19)" rx="2" ry="2" />
<text  x="1190.62" y="319.5" ></text>
</g>
<g >
<title>_start (902 samples, 91.11%)</title><rect x="16.0" y="453" width="1075.1" height="15.0" fill="rgb(214,90,53)" rx="2" ry="2" />
<text  x="18.96" y="463.5" >_start</text>
</g>
<g >
<title>setup_new_exec (1 samples, 0.10%)</title><rect x="1188.8" y="373" width="1.2" height="15.0" fill="rgb(237,162,51)" rx="2" ry="2" />
<text  x="1191.81" y="383.5" ></text>
</g>
<g >
<title>rs_nonblocking (1 samples, 0.10%)</title><rect x="1050.5" y="325" width="1.2" height="15.0" fill="rgb(251,95,34)" rx="2" ry="2" />
<text  x="1053.55" y="335.5" ></text>
</g>
<g >
<title>rs_give_credits (1 samples, 0.10%)</title><rect x="1182.8" y="437" width="1.2" height="15.0" fill="rgb(233,174,6)" rx="2" ry="2" />
<text  x="1185.85" y="447.5" ></text>
</g>
<g >
<title>stop_one_cpu (1 samples, 0.10%)</title><rect x="1187.6" y="373" width="1.2" height="15.0" fill="rgb(217,189,52)" rx="2" ry="2" />
<text  x="1190.62" y="383.5" ></text>
</g>
<g >
<title>wait_for_completion (1 samples, 0.10%)</title><rect x="1187.6" y="357" width="1.2" height="15.0" fill="rgb(228,41,36)" rx="2" ry="2" />
<text  x="1190.62" y="367.5" ></text>
</g>
<g >
<title>_dl_catch_error (1 samples, 0.10%)</title><rect x="16.0" y="181" width="1.2" height="15.0" fill="rgb(217,218,12)" rx="2" ry="2" />
<text  x="18.96" y="191.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.29 (1 samples, 0.10%)</title><rect x="1188.8" y="421" width="1.2" height="15.0" fill="rgb(205,30,26)" rx="2" ry="2" />
<text  x="1191.81" y="431.5" ></text>
</g>
<g >
<title>__vfs_read (2 samples, 0.20%)</title><rect x="1185.2" y="293" width="2.4" height="15.0" fill="rgb(210,77,17)" rx="2" ry="2" />
<text  x="1188.23" y="303.5" ></text>
</g>
<g >
<title>perf_pmu_enable (1 samples, 0.10%)</title><rect x="1187.6" y="245" width="1.2" height="15.0" fill="rgb(232,176,30)" rx="2" ry="2" />
<text  x="1190.62" y="255.5" ></text>
</g>
<g >
<title>perf_event_context_sched_in (1 samples, 0.10%)</title><rect x="1188.8" y="341" width="1.2" height="15.0" fill="rgb(237,123,52)" rx="2" ry="2" />
<text  x="1191.81" y="351.5" ></text>
</g>
<g >
<title>main (902 samples, 91.11%)</title><rect x="16.0" y="421" width="1075.1" height="15.0" fill="rgb(238,221,39)" rx="2" ry="2" />
<text  x="18.96" y="431.5" >main</text>
</g>
<g >
<title>send (897 samples, 90.61%)</title><rect x="21.9" y="357" width="1069.2" height="15.0" fill="rgb(240,109,43)" rx="2" ry="2" />
<text  x="24.92" y="367.5" >send</text>
</g>
<g >
<title>rs_post_recv (4 samples, 0.40%)</title><rect x="989.8" y="277" width="4.7" height="15.0" fill="rgb(242,116,42)" rx="2" ry="2" />
<text  x="992.76" y="287.5" ></text>
</g>
<g >
<title>send_data (898 samples, 90.71%)</title><rect x="20.7" y="373" width="1070.4" height="15.0" fill="rgb(205,54,26)" rx="2" ry="2" />
<text  x="23.73" y="383.5" >send_data</text>
</g>
<g >
<title>_dl_catch_error (1 samples, 0.10%)</title><rect x="16.0" y="133" width="1.2" height="15.0" fill="rgb(249,54,0)" rx="2" ry="2" />
<text  x="18.96" y="143.5" ></text>
</g>
<g >
<title>fd_fork_get (2 samples, 0.20%)</title><rect x="21.9" y="341" width="2.4" height="15.0" fill="rgb(227,176,32)" rx="2" ry="2" />
<text  x="24.92" y="351.5" ></text>
</g>
<g >
<title>perf_event_exec (1 samples, 0.10%)</title><rect x="1188.8" y="357" width="1.2" height="15.0" fill="rgb(244,130,41)" rx="2" ry="2" />
<text  x="1191.81" y="367.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.10%)</title><rect x="16.0" y="69" width="1.2" height="15.0" fill="rgb(243,173,37)" rx="2" ry="2" />
<text  x="18.96" y="79.5" ></text>
</g>
<g >
<title>load_drivers (1 samples, 0.10%)</title><rect x="16.0" y="245" width="1.2" height="15.0" fill="rgb(240,177,5)" rx="2" ry="2" />
<text  x="18.96" y="255.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.10%)</title><rect x="16.0" y="85" width="1.2" height="15.0" fill="rgb(237,109,30)" rx="2" ry="2" />
<text  x="18.96" y="95.5" ></text>
</g>
<g >
<title>ibv_poll_cq (3 samples, 0.30%)</title><rect x="1091.1" y="453" width="3.5" height="15.0" fill="rgb(230,114,22)" rx="2" ry="2" />
<text  x="1094.07" y="463.5" ></text>
</g>
<g >
<title>mlx4_post_send (21 samples, 2.12%)</title><rect x="1066.0" y="277" width="25.1" height="15.0" fill="rgb(233,46,44)" rx="2" ry="2" />
<text  x="1069.04" y="287.5" >m..</text>
</g>
<g >
<title>_dl_name_match_p (1 samples, 0.10%)</title><rect x="16.0" y="53" width="1.2" height="15.0" fill="rgb(211,2,43)" rx="2" ry="2" />
<text  x="18.96" y="63.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.10%)</title><rect x="1187.6" y="277" width="1.2" height="15.0" fill="rgb(242,229,12)" rx="2" ry="2" />
<text  x="1190.62" y="287.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.10%)</title><rect x="16.0" y="37" width="1.2" height="15.0" fill="rgb(209,121,38)" rx="2" ry="2" />
<text  x="18.96" y="47.5" ></text>
</g>
<g >
<title>fastlock_release (38 samples, 3.84%)</title><rect x="784.7" y="293" width="45.3" height="15.0" fill="rgb(218,124,12)" rx="2" ry="2" />
<text  x="787.75" y="303.5" >fast..</text>
</g>
<g >
<title>mlx4_poll_cq (84 samples, 8.48%)</title><rect x="887.3" y="261" width="100.1" height="15.0" fill="rgb(246,120,18)" rx="2" ry="2" />
<text  x="890.25" y="271.5" >mlx4_poll_cq</text>
</g>
<g >
<title>dlopen@@GLIBC_2.2.5 (1 samples, 0.10%)</title><rect x="16.0" y="213" width="1.2" height="15.0" fill="rgb(209,59,34)" rx="2" ry="2" />
<text  x="18.96" y="223.5" ></text>
</g>
<g >
<title>rs_post_write_msg (28 samples, 2.83%)</title><rect x="1057.7" y="309" width="33.4" height="15.0" fill="rgb(207,59,17)" rx="2" ry="2" />
<text  x="1060.70" y="319.5" >rs..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.10%)</title><rect x="1184.0" y="309" width="1.2" height="15.0" fill="rgb(207,46,53)" rx="2" ry="2" />
<text  x="1187.04" y="319.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (1 samples, 0.10%)</title><rect x="1187.6" y="389" width="1.2" height="15.0" fill="rgb(209,216,5)" rx="2" ry="2" />
<text  x="1190.62" y="399.5" ></text>
</g>
<g >
<title>rs_configure (1 samples, 0.10%)</title><rect x="16.0" y="341" width="1.2" height="15.0" fill="rgb(251,221,10)" rx="2" ry="2" />
<text  x="18.96" y="351.5" ></text>
</g>
<g >
<title>dlopen_doit (1 samples, 0.10%)</title><rect x="16.0" y="165" width="1.2" height="15.0" fill="rgb(244,148,15)" rx="2" ry="2" />
<text  x="18.96" y="175.5" ></text>
</g>
<g >
<title>rs_update_credits (1 samples, 0.10%)</title><rect x="1182.8" y="453" width="1.2" height="15.0" fill="rgb(211,153,46)" rx="2" ry="2" />
<text  x="1185.85" y="463.5" ></text>
</g>
<g >
<title>rs_conn_can_send (1 samples, 0.10%)</title><rect x="1179.3" y="437" width="1.2" height="15.0" fill="rgb(205,136,49)" rx="2" ry="2" />
<text  x="1182.27" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.10%)</title><rect x="1187.6" y="229" width="1.2" height="15.0" fill="rgb(237,162,5)" rx="2" ry="2" />
<text  x="1190.62" y="239.5" ></text>
</g>
<g >
<title>preempt_schedule_common (1 samples, 0.10%)</title><rect x="1187.6" y="325" width="1.2" height="15.0" fill="rgb(254,58,15)" rx="2" ry="2" />
<text  x="1190.62" y="335.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.10%)</title><rect x="1187.6" y="341" width="1.2" height="15.0" fill="rgb(253,145,10)" rx="2" ry="2" />
<text  x="1190.62" y="351.5" ></text>
</g>
<g >
<title>mlx4_find_qp (5 samples, 0.51%)</title><rect x="981.4" y="245" width="6.0" height="15.0" fill="rgb(244,12,4)" rx="2" ry="2" />
<text  x="984.41" y="255.5" ></text>
</g>
<g >
<title>fastlock_acquire (37 samples, 3.74%)</title><rect x="740.6" y="293" width="44.1" height="15.0" fill="rgb(216,144,47)" rx="2" ry="2" />
<text  x="743.65" y="303.5" >fast..</text>
</g>
<g >
<title>pthread_spin_lock (57 samples, 5.76%)</title><rect x="1094.6" y="453" width="68.0" height="15.0" fill="rgb(245,157,0)" rx="2" ry="2" />
<text  x="1097.65" y="463.5" >pthread..</text>
</g>
<g >
<title>extract_entropy_user (2 samples, 0.20%)</title><rect x="1185.2" y="261" width="2.4" height="15.0" fill="rgb(241,112,15)" rx="2" ry="2" />
<text  x="1188.23" y="271.5" ></text>
</g>
<g >
<title>rs_can_send (2 samples, 0.20%)</title><rect x="554.7" y="325" width="2.4" height="15.0" fill="rgb(212,57,37)" rx="2" ry="2" />
<text  x="557.71" y="335.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.10%)</title><rect x="1188.8" y="405" width="1.2" height="15.0" fill="rgb(231,181,42)" rx="2" ry="2" />
<text  x="1191.81" y="415.5" ></text>
</g>
<g >
<title>ibverbs_get_device_list (1 samples, 0.10%)</title><rect x="16.0" y="261" width="1.2" height="15.0" fill="rgb(249,129,41)" rx="2" ry="2" />
<text  x="18.96" y="271.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.10%)</title><rect x="1188.8" y="389" width="1.2" height="15.0" fill="rgb(248,103,54)" rx="2" ry="2" />
<text  x="1191.81" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.10%)</title><rect x="1184.0" y="421" width="1.2" height="15.0" fill="rgb(240,53,34)" rx="2" ry="2" />
<text  x="1187.04" y="431.5" ></text>
</g>
<g >
<title>ucma_init (1 samples, 0.10%)</title><rect x="16.0" y="325" width="1.2" height="15.0" fill="rgb(209,206,9)" rx="2" ry="2" />
<text  x="18.96" y="335.5" ></text>
</g>
<g >
<title>mlx4_poll_cq (3 samples, 0.30%)</title><rect x="1091.1" y="437" width="3.5" height="15.0" fill="rgb(243,10,40)" rx="2" ry="2" />
<text  x="1094.07" y="447.5" ></text>
</g>
<g >
<title>idm_at (2 samples, 0.20%)</title><rect x="552.3" y="325" width="2.4" height="15.0" fill="rgb(225,175,36)" rx="2" ry="2" />
<text  x="555.32" y="335.5" ></text>
</g>
<g >
<title>extract_buf (2 samples, 0.20%)</title><rect x="1185.2" y="245" width="2.4" height="15.0" fill="rgb(210,57,31)" rx="2" ry="2" />
<text  x="1188.23" y="255.5" ></text>
</g>
<g >
<title>pthread_spin_lock@plt (1 samples, 0.10%)</title><rect x="1162.6" y="453" width="1.2" height="15.0" fill="rgb(209,29,44)" rx="2" ry="2" />
<text  x="1165.59" y="463.5" ></text>
</g>
<g >
<title>send_tcp_stream (901 samples, 91.01%)</title><rect x="17.2" y="405" width="1073.9" height="15.0" fill="rgb(252,51,53)" rx="2" ry="2" />
<text  x="20.15" y="415.5" >send_tcp_stream</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="1184.0" y="405" width="1.2" height="15.0" fill="rgb(210,46,10)" rx="2" ry="2" />
<text  x="1187.04" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.10%)</title><rect x="1184.0" y="293" width="1.2" height="15.0" fill="rgb(244,36,33)" rx="2" ry="2" />
<text  x="1187.04" y="303.5" ></text>
</g>
<g >
<title>pthread_spin_unlock@plt (2 samples, 0.20%)</title><rect x="1163.8" y="453" width="2.4" height="15.0" fill="rgb(253,88,12)" rx="2" ry="2" />
<text  x="1166.78" y="463.5" ></text>
</g>
<g >
<title>get_uuid_string (2 samples, 0.20%)</title><rect x="1185.2" y="437" width="2.4" height="15.0" fill="rgb(211,44,4)" rx="2" ry="2" />
<text  x="1188.23" y="447.5" ></text>
</g>
<g >
<title>_dl_open (1 samples, 0.10%)</title><rect x="16.0" y="149" width="1.2" height="15.0" fill="rgb(224,106,15)" rx="2" ry="2" />
<text  x="18.96" y="159.5" ></text>
</g>
<g >
<title>__errno_location@plt (2 samples, 0.20%)</title><rect x="10.0" y="437" width="2.4" height="15.0" fill="rgb(207,213,45)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>ibv_get_device_list@@IBVERBS_1.1 (1 samples, 0.10%)</title><rect x="16.0" y="309" width="1.2" height="15.0" fill="rgb(215,190,47)" rx="2" ry="2" />
<text  x="18.96" y="319.5" ></text>
</g>
<g >
<title>rs_conn_can_send (24 samples, 2.42%)</title><rect x="830.0" y="293" width="28.6" height="15.0" fill="rgb(223,113,17)" rx="2" ry="2" />
<text  x="833.04" y="303.5" >rs..</text>
</g>
<g >
<title>ibv_poll_cq (92 samples, 9.29%)</title><rect x="880.1" y="277" width="109.7" height="15.0" fill="rgb(238,183,40)" rx="2" ry="2" />
<text  x="883.10" y="287.5" >ibv_poll_cq</text>
</g>
<g >
<title>rsend (895 samples, 90.40%)</title><rect x="24.3" y="341" width="1066.8" height="15.0" fill="rgb(228,116,52)" rx="2" ry="2" />
<text  x="27.30" y="351.5" >rsend</text>
</g>
<g >
<title>rs_poll_cq (2 samples, 0.20%)</title><rect x="1180.5" y="437" width="2.3" height="15.0" fill="rgb(210,115,16)" rx="2" ry="2" />
<text  x="1183.46" y="447.5" ></text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.10%)</title><rect x="1187.6" y="181" width="1.2" height="15.0" fill="rgb(222,176,4)" rx="2" ry="2" />
<text  x="1190.62" y="191.5" ></text>
</g>
<g >
<title>establish_control_internal (1 samples, 0.10%)</title><rect x="16.0" y="389" width="1.2" height="15.0" fill="rgb(219,199,47)" rx="2" ry="2" />
<text  x="18.96" y="399.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.10%)</title><rect x="1184.0" y="261" width="1.2" height="15.0" fill="rgb(210,84,36)" rx="2" ry="2" />
<text  x="1187.04" y="271.5" ></text>
</g>
<g >
<title>ibv_post_recv (3 samples, 0.30%)</title><rect x="990.9" y="261" width="3.6" height="15.0" fill="rgb(213,48,7)" rx="2" ry="2" />
<text  x="993.95" y="271.5" ></text>
</g>
<g >
<title>ibv_post_send (26 samples, 2.63%)</title><rect x="1060.1" y="293" width="31.0" height="15.0" fill="rgb(240,106,34)" rx="2" ry="2" />
<text  x="1063.08" y="303.5" >ib..</text>
</g>
<g >
<title>tick_sched_handle.isra.15 (1 samples, 0.10%)</title><rect x="1184.0" y="325" width="1.2" height="15.0" fill="rgb(254,128,9)" rx="2" ry="2" />
<text  x="1187.04" y="335.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.10%)</title><rect x="1184.0" y="277" width="1.2" height="15.0" fill="rgb(211,136,29)" rx="2" ry="2" />
<text  x="1187.04" y="287.5" ></text>
</g>
<g >
<title>__errno_location@plt (1 samples, 0.10%)</title><rect x="845.5" y="277" width="1.2" height="15.0" fill="rgb(248,18,23)" rx="2" ry="2" />
<text  x="848.54" y="287.5" ></text>
</g>
<g >
<title>_IO_file_xsgetn (2 samples, 0.20%)</title><rect x="1185.2" y="389" width="2.4" height="15.0" fill="rgb(247,12,10)" rx="2" ry="2" />
<text  x="1188.23" y="399.5" ></text>
</g>
<g >
<title>scan_omni_args (2 samples, 0.20%)</title><rect x="1185.2" y="453" width="2.4" height="15.0" fill="rgb(252,114,34)" rx="2" ry="2" />
<text  x="1188.23" y="463.5" ></text>
</g>
<g >
<title>perf_event_context_sched_in (1 samples, 0.10%)</title><rect x="1187.6" y="261" width="1.2" height="15.0" fill="rgb(227,191,43)" rx="2" ry="2" />
<text  x="1190.62" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_fastpath (1 samples, 0.10%)</title><rect x="1187.6" y="437" width="1.2" height="15.0" fill="rgb(215,140,17)" rx="2" ry="2" />
<text  x="1190.62" y="447.5" ></text>
</g>
<g >
<title>pthread_once (1 samples, 0.10%)</title><rect x="16.0" y="293" width="1.2" height="15.0" fill="rgb(241,124,6)" rx="2" ry="2" />
<text  x="18.96" y="303.5" ></text>
</g>
<g >
<title>establish_control (1 samples, 0.10%)</title><rect x="16.0" y="405" width="1.2" height="15.0" fill="rgb(205,62,54)" rx="2" ry="2" />
<text  x="18.96" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.10%)</title><rect x="1184.0" y="373" width="1.2" height="15.0" fill="rgb(237,171,37)" rx="2" ry="2" />
<text  x="1187.04" y="383.5" ></text>
</g>
</g>
</svg>
